syntax = "proto3";

package omendb.v1;

// OmenDB gRPC service
service OmenDB {
  // Add a single vector
  rpc AddVector(AddVectorRequest) returns (AddVectorResponse);
  
  // Add multiple vectors in batch
  rpc AddVectorsBatch(AddVectorsBatchRequest) returns (AddVectorsBatchResponse);
  
  // Search for similar vectors
  rpc Search(SearchRequest) returns (SearchResponse);
  
  // Get vector by ID
  rpc GetVector(GetVectorRequest) returns (GetVectorResponse);
  
  // Delete vector by ID
  rpc DeleteVector(DeleteVectorRequest) returns (DeleteVectorResponse);
  
  // Health check
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

// Request to add a single vector
message AddVectorRequest {
  string id = 1;
  repeated float vector = 2;
  map<string, string> metadata = 3;
  optional string collection = 4;
}

// Response for adding a vector
message AddVectorResponse {
  string id = 1;
  bool created = 2;
}

// Request to add multiple vectors
message AddVectorsBatchRequest {
  repeated AddVectorRequest vectors = 1;
  optional string collection = 2;
}

// Response for batch add
message AddVectorsBatchResponse {
  int32 added = 1;
  int32 updated = 2;
  repeated BatchError errors = 3;
}

// Batch operation error
message BatchError {
  string vector_id = 1;
  string error = 2;
}

// Search request
message SearchRequest {
  repeated float vector = 1;
  int32 top_k = 2;
  map<string, string> filter = 3;
  bool include_vector = 4;
  optional string collection = 5;
}

// Search response
message SearchResponse {
  repeated SearchResult results = 1;
  double query_time_ms = 2;
  int32 vectors_searched = 3;
}

// Search result
message SearchResult {
  string id = 1;
  float distance = 2;
  map<string, string> metadata = 3;
  optional VectorData vector = 4;
}

// Vector data
message VectorData {
  repeated float data = 1;
}

// Get vector request
message GetVectorRequest {
  string id = 1;
}

// Get vector response
message GetVectorResponse {
  optional VectorData vector = 1;
  map<string, string> metadata = 2;
}

// Delete vector request
message DeleteVectorRequest {
  string id = 1;
}

// Delete vector response
message DeleteVectorResponse {
  bool deleted = 1;
}

// Health check request
message HealthCheckRequest {}

// Health check response
message HealthCheckResponse {
  string status = 1;
  string version = 2;
  int64 uptime_seconds = 3;
}