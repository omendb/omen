apiVersion: apps/v1
kind: Deployment
metadata:
  name: omendb-server
  labels:
    app: omendb-server
    version: v0.1.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: omendb-server
  template:
    metadata:
      labels:
        app: omendb-server
        version: v0.1.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9091"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: omendb-server
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: omendb-server
        image: omendb/server:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 9090
          protocol: TCP
        - name: metrics
          containerPort: 9091
          protocol: TCP
        env:
        - name: RUST_LOG
          value: "info,omendb_server=debug"
        - name: OMENDB_HTTP_PORT
          value: "8080"
        - name: OMENDB_GRPC_PORT
          value: "9090"
        - name: OMENDB_WORKER_THREADS
          value: "8"
        - name: OMENDB_DIMENSION
          value: "128"
        - name: OMENDB_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: omendb-secrets
              key: jwt-secret
        - name: OMENDB_DATA_DIR
          value: "/app/data"
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "8Gi"
            cpu: "4"
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: config
          mountPath: /app/config.toml
          subPath: config.toml
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: omendb-data
      - name: config
        configMap:
          name: omendb-config
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: "omendb.com/dedicated"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - omendb-server
              topologyKey: kubernetes.io/hostname