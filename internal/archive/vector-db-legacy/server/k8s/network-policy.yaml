apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: omendb-server
  labels:
    app: omendb-server
spec:
  podSelector:
    matchLabels:
      app: omendb-server
  
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow ingress controller traffic
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: aws-load-balancer-controller
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
  
  # Allow Prometheus scraping
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - podSelector:
        matchLabels:
          app: prometheus
    ports:
    - protocol: TCP
      port: 9091
  
  # Allow internal pod-to-pod communication
  - from:
    - podSelector:
        matchLabels:
          app: omendb-server
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 9090
    - protocol: TCP
      port: 9091
  
  # Allow health checks from kubelet
  - from: []
    ports:
    - protocol: TCP
      port: 8080  # Health check endpoint
  
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow HTTPS for external APIs (auth, monitoring)
  - to: []
    ports:
    - protocol: TCP
      port: 443
  
  # Allow S3 access for cold storage
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
  
  # Allow database connections (if using external DB)
  - to:
    - namespaceSelector:
        matchLabels:
          name: database
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: omendb-server
  labels:
    app: omendb-server
spec:
  minAvailable: 2  # Always keep at least 2 pods running
  selector:
    matchLabels:
      app: omendb-server

---
# Security context policy (for PSP replacement)
apiVersion: v1
kind: Pod
metadata:
  name: omendb-server-security-template
  labels:
    app: omendb-server
spec:
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    fsGroupChangePolicy: "OnRootMismatch"
    seccompProfile:
      type: RuntimeDefault
  
  containers:
  - name: omendb-server
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      capabilities:
        drop:
        - ALL
        add:
        - NET_BIND_SERVICE  # Only if binding to privileged ports
    
    # Resource limits for security
    resources:
      limits:
        cpu: 4
        memory: 8Gi
        ephemeral-storage: 1Gi
      requests:
        cpu: 500m
        memory: 2Gi
        ephemeral-storage: 100Mi